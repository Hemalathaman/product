package com.novelvista.gtest.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.novelvista.gtest.entity.ProductUser;
import com.novelvista.gtest.service.ProductUserService;

@RestController
@RequestMapping("/store")
public class MyWebController {
	
	@Autowired
	ProductUserService userService;
	public MyWebController()
	{
		System.out.println("\n\n\n=====>> Inside Constructor");
	}
	@PostMapping("/product")
	public String addProduct(@RequestBody ProductUser user)
	{
	  try
	  {
		  return userService.insertProduct(user);
	  }catch(Exception e) {
		  return "Contact to customer care 1800 or mail us:-care@capg.com"+e;
	  }
	}
	  @GetMapping("/products")
	  public List<ProductUser> getAllProducts()
	  {
		  try
		  {
			  List<ProductUser> allProducts=userService.getAllProducts();
			  return allProducts;
		  }catch(Exception e)
		  {
			  System.out.println(e);
		  }
		  return null;
	  }
	  @GetMapping("productname/{searchProductName}")
	  public ProductUser abc(@PathVariable String searchProductName) throws Exception
	  {
		  return userService.getProductByName(searchProductName);
	  }
	 @GetMapping("productdealer/{searchDealerName}")
	 public ProductUser def(@PathVariable String searchDealerName) throws Exception
	 {
		 return userService.getProductByDealerName(searchDealerName);
	 }
	 @GetMapping("productcode/{searchProductCode}")
	 public ProductUser ghi(@PathVariable int  searchProductCode) throws Exception
	 {
		 return userService.getProductByProductCode(searchProductCode);
	 }
		@GetMapping("/productbycategoryandpriceanddealer/")
		public List<ProductUser>jkl(@RequestParam String searchcategory,@RequestParam int price1,@RequestParam int price2,@RequestParam String searchDealerName)throws Exception
		
		{
			return userService.getProductsByCategoryAndPriceRangeAndDealerName(searchcategory, price1, price2, searchDealerName);
		}
		@GetMapping("/productbycategoryandpriceandrating")
		public List<ProductUser> lmn(@RequestParam String searchCategory,@RequestParam int searchPrice,@RequestParam int searchRating) throws Exception
		{
			return userService.getAllProductsByCategoryAndPriceAndRating(searchCategory, searchPrice, searchRating);
		}
		
	}


